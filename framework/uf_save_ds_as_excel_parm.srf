HA$PBExportHeader$uf_save_ds_as_excel_parm.srf
global type uf_save_ds_as_excel_parm from function_object
end type

forward prototypes
global function integer uf_save_ds_as_excel_parm (ref datastore adw_dw, readonly string as_filename, ref n_dwr_service_parm anvo_parm)
end prototypes

global function integer uf_save_ds_as_excel_parm (ref datastore adw_dw, readonly string as_filename, ref n_dwr_service_parm anvo_parm);integer li_ret = 1

n_dwr_nested_service_parm lnvo_nested_parm
n_dwr_service lnvo_dwr
n_xls_workbook lnvo_writer

if isNull(anvo_parm) then anvo_parm = create n_dwr_service_parm

lnvo_dwr = create n_dwr_service

if anvo_parm.is_version = '97' then
	lnvo_writer = create n_xls_workbook_v97
else
	lnvo_writer = create n_xls_workbook_v5
end if

li_ret = lnvo_dwr.of_create(adw_dw, lnvo_writer, as_filename, anvo_parm, lnvo_nested_parm)
if li_ret = 1 then
	li_ret = lnvo_dwr.of_process()
end if

if li_ret = 1 then
	lnvo_dwr.of_close()
end if

destroy lnvo_writer
destroy lnvo_dwr

if li_ret <> 1 then FileDelete(as_filename)

return li_ret

//************************************************************ 
//  this did not work sometimes - removed
//************************************************************ 
////-- 06.09.2004
//integer li_ret = 0
//
//open(w_ds2xls)
//
//li_ret = w_ds2xls.of_register_ds(ads_ds)
//
//if li_ret = 1 then li_ret = uf_save_dw_as_excel_parm(w_ds2xls.dw_1, as_filename, anvo_parm)
//
//w_ds2xls.of_unregister_ds(ads_ds)
//close(w_ds2xls)
//
//return li_ret



end function

